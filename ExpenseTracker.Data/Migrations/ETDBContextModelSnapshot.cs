// <auto-generated />
using System;
using ExpenseTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExpenseTracker.Data.Migrations
{
    [DbContext(typeof(ETDBContext))]
    partial class ETDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("ExpenseTracker.Data.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrencyName = "INR"
                        },
                        new
                        {
                            Id = 2,
                            CurrencyName = "USD"
                        },
                        new
                        {
                            Id = 3,
                            CurrencyName = "EUR"
                        },
                        new
                        {
                            Id = 4,
                            CurrencyName = "SFR"
                        },
                        new
                        {
                            Id = 5,
                            CurrencyName = "AUD"
                        },
                        new
                        {
                            Id = 6,
                            CurrencyName = "SGD"
                        },
                        new
                        {
                            Id = 7,
                            CurrencyName = "GBP"
                        });
                });

            modelBuilder.Entity("ExpenseTracker.Data.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExpenseCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExpenseTitle")
                        .HasColumnType("TEXT");

                    b.Property<double>("ExpensesAmount")
                        .HasColumnType("REAL");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaymentType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Signature")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("inDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("updateDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ExpenseCategoryId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("ExpenseTracker.Data.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("expenseCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Grocery"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Restaurants"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Transportation"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Gifts"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Medical"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Insurance"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Clothing"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Education"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Utilities"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Shelter"
                        },
                        new
                        {
                            Id = 11,
                            Category = "Personal"
                        },
                        new
                        {
                            Id = 12,
                            Category = "Kids schooling"
                        },
                        new
                        {
                            Id = 13,
                            Category = "Household items"
                        },
                        new
                        {
                            Id = 14,
                            Category = "Fun money"
                        },
                        new
                        {
                            Id = 15,
                            Category = "Office exp"
                        },
                        new
                        {
                            Id = 16,
                            Category = "Donation"
                        },
                        new
                        {
                            Id = 17,
                            Category = "Miscellaneous"
                        });
                });

            modelBuilder.Entity("ExpenseTracker.Data.ExpenseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Detail")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseId")
                        .IsUnique();

                    b.ToTable("ExpenseDetail");
                });

            modelBuilder.Entity("ExpenseTracker.Data.Expense", b =>
                {
                    b.HasOne("ExpenseTracker.Data.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseTracker.Data.ExpenseCategory", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpenseTracker.Data.ExpenseDetail", b =>
                {
                    b.HasOne("ExpenseTracker.Data.Expense", "Expense")
                        .WithOne("ExpenseDetail")
                        .HasForeignKey("ExpenseTracker.Data.ExpenseDetail", "ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
